{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\Login\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React from \"react\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\n\n// export default function SignupButton () {\n//     const { loginWithRedirect, user} = useAuth0();\n\n// //console.log(user)\n//     return(\n//             <button onClick={()=>loginWithRedirect()} className=\"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\">Sign up </button>\n//     )\n// };\n\nexport default function SignupButton() {\n  _s();\n  const {\n    loginWithRedirect,\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const createUserInDatabase = user => {\n    // Aquí va la lógica para crear el usuario en la base de datos\n    // Puedes implementar la función createUser o realizar una solicitud a tu API\n    // para guardar los datos del usuario en tu base de datos\n    const userDb = {\n      email: user.email,\n      name: user.name\n      // Otros datos del usuario que deseas guardar en la base de datos\n    };\n\n    // Ejemplo usando una función createUser que deberías definir en tu código\n    createUser(userDb).then(() => {\n      console.log(\"Usuario creado exitosamente en la base de datos\");\n    }).catch(error => {\n      console.error(\"Error al crear el usuario en la base de datos:\", error);\n    });\n  };\n\n  // Lógica para crear el usuario en la base de datos cuando el usuario se registra\n  if (isAuthenticated && user) {\n    // Verifica si el usuario se ha registrado por primera vez para evitar llamadas duplicadas\n    if (user.sub.includes(\"auth0|\")) {\n      createUserInDatabase(user);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => loginWithRedirect(),\n    className: \"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\",\n    children: \"Sign up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n_s(SignupButton, \"109BWYYfDfItcAsji14bqv6XKKs=\", true);\n_c = SignupButton;\n;\nvar _c;\n$RefreshReg$(_c, \"SignupButton\");","map":{"version":3,"names":["SignupButton","_s","loginWithRedirect","user","isAuthenticated","useAuth0","createUserInDatabase","userDb","email","name","createUser","then","console","log","catch","error","sub","includes","_jsxDEV","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/Login/Signup.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n// export default function SignupButton () {\r\n//     const { loginWithRedirect, user} = useAuth0();\r\n\r\n// //console.log(user)\r\n//     return(\r\n//             <button onClick={()=>loginWithRedirect()} className=\"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\">Sign up </button>\r\n//     )\r\n// };\r\n\r\nexport default function SignupButton() {\r\n    const { loginWithRedirect, user, isAuthenticated } = useAuth0();\r\n  \r\n    const createUserInDatabase = (user) => {\r\n      // Aquí va la lógica para crear el usuario en la base de datos\r\n      // Puedes implementar la función createUser o realizar una solicitud a tu API\r\n      // para guardar los datos del usuario en tu base de datos\r\n      const userDb = {\r\n        email: user.email,\r\n        name: user.name,\r\n        // Otros datos del usuario que deseas guardar en la base de datos\r\n      };\r\n  \r\n      // Ejemplo usando una función createUser que deberías definir en tu código\r\n      createUser(userDb)\r\n        .then(() => {\r\n          console.log(\"Usuario creado exitosamente en la base de datos\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error al crear el usuario en la base de datos:\", error);\r\n        });\r\n    };\r\n  \r\n    // Lógica para crear el usuario en la base de datos cuando el usuario se registra\r\n    if (isAuthenticated && user) {\r\n      // Verifica si el usuario se ha registrado por primera vez para evitar llamadas duplicadas\r\n      if (user.sub.includes(\"auth0|\")) {\r\n        createUserInDatabase(user);\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <button onClick={() => loginWithRedirect()} className=\"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\">Sign up</button>\r\n    );\r\n  };"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASA,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC,iBAAiB;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGC,QAAQ,EAAE;EAE/D,MAAMC,oBAAoB,GAAIH,IAAI,IAAK;IACrC;IACA;IACA;IACA,MAAMI,MAAM,GAAG;MACbC,KAAK,EAAEL,IAAI,CAACK,KAAK;MACjBC,IAAI,EAAEN,IAAI,CAACM;MACX;IACF,CAAC;;IAED;IACAC,UAAU,CAACH,MAAM,CAAC,CACfI,IAAI,CAAC,MAAM;MACVC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAChE,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACxE,CAAC,CAAC;EACN,CAAC;;EAED;EACA,IAAIX,eAAe,IAAID,IAAI,EAAE;IAC3B;IACA,IAAIA,IAAI,CAACa,GAAG,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC/BX,oBAAoB,CAACH,IAAI,CAAC;IAC5B;EACF;EAEA,oBACEe,OAAA;IAAQC,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,EAAG;IAACkB,SAAS,EAAC,4CAA4C;IAAAC,QAAA,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAEvH;AAACxB,EAAA,CAlCqBD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkCjC;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}