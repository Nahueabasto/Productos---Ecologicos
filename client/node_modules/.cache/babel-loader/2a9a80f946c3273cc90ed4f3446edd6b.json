{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\Cards\\\\Paginado.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport \"./Paginado.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paginado = _ref => {\n  _s();\n  let {\n    cards\n  } = _ref;\n  const [visibleCardIndex, setVisibleCardIndex] = useState(0);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const cardsPerPage = 4;\n\n  // Manejador del botón \"Anterior\"\n  const handlePrevClick = () => {\n    if (!isTransitioning && visibleCardIndex > 0) {\n      setIsTransitioning(true);\n      setVisibleCardIndex(prevIndex => prevIndex - 1);\n    }\n  };\n\n  // Manejador del botón \"Siguiente\"\n  const handleNextClick = () => {\n    if (!isTransitioning) {\n      setIsTransitioning(true);\n      setVisibleCardIndex(prevIndex => (prevIndex + 1) % cards.length);\n    }\n  };\n\n  // Calcula el índice inicial para las tarjetas visibles\n  const startIndex = visibleCardIndex;\n  const visibleCards = cards.slice(startIndex, startIndex + cardsPerPage);\n\n  // Restablece el indicador de transición después de actualizar el estado\n  useEffect(() => {\n    setIsTransitioning(false);\n  }, [visibleCardIndex]);\n\n  // Restablece el índice de la tarjeta visible cuando cambian las tarjetas\n  useEffect(() => {\n    setVisibleCardIndex(0);\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginado-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination-button\",\n        onClick: handlePrevClick,\n        disabled: visibleCardIndex === 0 || isTransitioning,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), visibleCards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        id: card.id,\n        images: card.images,\n        name: card.name,\n        price: card.price\n      }, startIndex + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination-button\",\n        onClick: handleNextClick,\n        disabled: isTransitioning,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Paginado, \"1+ZkbsZjC6MO+wZ3uQnmiYfhOgM=\");\n_c = Paginado;\nexport default Paginado;\nvar _c;\n$RefreshReg$(_c, \"Paginado\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","Paginado","_ref","_s","cards","visibleCardIndex","setVisibleCardIndex","isTransitioning","setIsTransitioning","cardsPerPage","handlePrevClick","prevIndex","handleNextClick","length","startIndex","visibleCards","slice","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","id","images","name","price","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/Cards/Paginado.jsx"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Paginado.css\";\r\n\r\nconst Paginado = ({ cards }) => {\r\n  const [visibleCardIndex, setVisibleCardIndex] = useState(0);\r\n  const [isTransitioning, setIsTransitioning] = useState(false);\r\n  const cardsPerPage = 4;\r\n\r\n  // Manejador del botón \"Anterior\"\r\n  const handlePrevClick = () => {\r\n    if (!isTransitioning && visibleCardIndex > 0) {\r\n      setIsTransitioning(true);\r\n      setVisibleCardIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  };\r\n\r\n  // Manejador del botón \"Siguiente\"\r\n  const handleNextClick = () => {\r\n    if (!isTransitioning) {\r\n      setIsTransitioning(true);\r\n      setVisibleCardIndex((prevIndex) => (prevIndex + 1) % cards.length);\r\n    }\r\n  };\r\n\r\n  // Calcula el índice inicial para las tarjetas visibles\r\n  const startIndex = visibleCardIndex;\r\n  const visibleCards = cards.slice(startIndex, startIndex + cardsPerPage);\r\n\r\n  // Restablece el indicador de transición después de actualizar el estado\r\n  useEffect(() => {\r\n    setIsTransitioning(false);\r\n  }, [visibleCardIndex]);\r\n\r\n  // Restablece el índice de la tarjeta visible cuando cambian las tarjetas\r\n  useEffect(() => {\r\n    setVisibleCardIndex(0);\r\n  }, [cards]);\r\n\r\n  return (\r\n    <div className=\"paginado-container\">\r\n      <div className=\"cards-container\">\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={handlePrevClick}\r\n          disabled={visibleCardIndex === 0 || isTransitioning}\r\n        >\r\n          &lt;\r\n        </button>\r\n        {visibleCards.map((card, index) => (\r\n          <Card\r\n            key={startIndex + index}\r\n            id={card.id}\r\n            images={card.images}\r\n            name={card.name}\r\n            price={card.price}\r\n          />\r\n        ))}\r\n        <button\r\n          className=\"pagination-button\"\r\n          onClick={handleNextClick}\r\n          disabled={isTransitioning}\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginado;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}