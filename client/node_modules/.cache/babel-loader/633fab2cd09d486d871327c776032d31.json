{"ast":null,"code":"import { GET_PRODUCTS, GET_PRODUCT_DETAIL, GET_LINE_PRODUCTS, SET_LINE, FOOTER, SEARCH_SUCCESS, SET_SEARCH, ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY, UPDATE_CART_COUNT, REMOVE_ALL } from \"./Actions\";\nconst initialState = {\n  products: [],\n  filtered: [],\n  detail: [],\n  selectedCategory: \"\",\n  footer: false,\n  isSearch: false,\n  // searchResults: [], \n  // searchError: null,\n  isLine: false,\n  shoppingCart: [],\n  cartCount: 0\n};\nfunction reducer() {\n  var _action$payload$, _action$payload$$line;\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n        filtered: action.payload\n      };\n    case GET_PRODUCT_DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case GET_LINE_PRODUCTS:\n      console.log(\"State GET_LINE_PRODUCTS:\", state);\n      return {\n        ...state,\n        filtered: ((_action$payload$ = action.payload[0]) === null || _action$payload$ === void 0 ? void 0 : (_action$payload$$line = _action$payload$.lines[0]) === null || _action$payload$$line === void 0 ? void 0 : _action$payload$$line.name) || \"\",\n        products: action.payload\n      };\n    case SET_LINE:\n      return {\n        ...state,\n        isLine: true\n      };\n    case FOOTER:\n      return {\n        ...state,\n        footer: !state.footer\n      };\n\n    ////\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case SET_SEARCH:\n      return {\n        ...state,\n        isSearch: true\n      };\n    case ADD_TO_CART:\n      const currentItem = state.shoppingCart.find(item => item.id === action.payload.id); // buscar si existe el item primero en el carrito\n      if (currentItem) {\n        console.log(\"Updating quantity for item with ID:\", action.payload.id);\n        return {\n          //si existe, agregarle 1 a la cantidad\n          ...state,\n          shoppingCart: state.shoppingCart.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } //si existe el item, actualizá la cantidad y agregale 1\n          : item)\n        };\n      } else {\n        console.log(\"Adding new item to the cart:\", action.payload);\n        return {\n          ...state,\n          shoppingCart: [...state.shoppingCart, {\n            ...action.payload,\n            quantity: 1\n          }]\n        }; //si no existe, agregalo y agregá una quantity con 1\n      }\n      ;\n    case REMOVE_FROM_CART:\n      const currenItem = state.shoppingCart.find(item => item.id === action.payload); //primero buscar el item\n      if (currenItem) {\n        //si existe el item, evaluar si es mayor que 1 su cantidad\n        if (currenItem.quantity > 1) {\n          return {\n            ...state,\n            shoppingCart: state.shoppingCart.map(item => item.id === action.payload ? {\n              ...item,\n              quantity: item.quantity - 1\n            } : item) // si es mayor que 1, bajar la cantidad en uno\n          };\n        } else {\n          // Si es 1 la cantidad, borrarlo directamente\n          return {\n            ...state,\n            shoppingCart: state.shoppingCart.filter(item => item.id !== action.payload)\n          };\n        }\n      }\n      return state;\n    // retornar el estado actual si no se encuentran el item\n\n    case REMOVE_ALL:\n      const {\n        productId,\n        quantityToRemove\n      } = action.payload;\n      return {\n        ...state,\n        shoppingCart: state.shoppingCart.filter(item => item.id !== productId),\n        cartCount: state.cartCount - quantityToRemove\n      };\n    case UPDATE_QUANTITY:\n      return {\n        ...state,\n        shoppingCart: state.items.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item)\n      };\n    case UPDATE_CART_COUNT:\n      const increment = action.payload; //si increment viene en true viene en el payload\n      return {\n        ...state,\n        cartCount: increment ? state.cartCount + 1 : state.cartCount - 1\n      };\n    // si increment está en true, sumale uno a la cuenta. Sino, restale 1.\n\n    default:\n      return state;\n  }\n}\nexport default reducer;","map":{"version":3,"names":["GET_PRODUCTS","GET_PRODUCT_DETAIL","GET_LINE_PRODUCTS","SET_LINE","FOOTER","SEARCH_SUCCESS","SET_SEARCH","ADD_TO_CART","REMOVE_FROM_CART","UPDATE_QUANTITY","UPDATE_CART_COUNT","REMOVE_ALL","initialState","products","filtered","detail","selectedCategory","footer","isSearch","isLine","shoppingCart","cartCount","reducer","_action$payload$","_action$payload$$line","state","arguments","length","undefined","action","type","payload","console","log","lines","name","currentItem","find","item","id","map","quantity","currenItem","filter","productId","quantityToRemove","items","increment"],"sources":["C:/Users/Bedettina/Desktop/Henry/Productos---Ecologicos/client/src/Redux/Reducer.js"],"sourcesContent":["import { GET_PRODUCTS, GET_PRODUCT_DETAIL, GET_LINE_PRODUCTS, SET_LINE, FOOTER, SEARCH_SUCCESS, SET_SEARCH, ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY, UPDATE_CART_COUNT, REMOVE_ALL } from \"./Actions\";\r\n\r\n\r\nconst initialState = {\r\n    products: [],\r\n    filtered: [],\r\n    detail: [],\r\n    selectedCategory: \"\",\r\n    footer: false,\r\n    isSearch: false,\r\n    // searchResults: [], \r\n    // searchError: null,\r\n    isLine: false,\r\n    shoppingCart: [],\r\n    cartCount: 0,\r\n}\r\n\r\nfunction reducer (state = initialState, action) {\r\nswitch (action.type) {\r\n    case GET_PRODUCTS:\r\n        return{\r\n            ...state,\r\n            products: action.payload,\r\n            filtered: action.payload,\r\n        };\r\n    case GET_PRODUCT_DETAIL:\r\n        return{\r\n            ...state,\r\n            detail: action.payload,\r\n        }\r\n\r\n    case GET_LINE_PRODUCTS:\r\n      console.log(\"State GET_LINE_PRODUCTS:\", state);\r\n        return{\r\n            ...state,\r\n            filtered: action.payload[0]?.lines[0]?.name || \"\",\r\n            products: action.payload,\r\n        }\r\n      case SET_LINE:\r\n        return {\r\n        ...state,\r\n        isLine: true,\r\n      };\r\n\r\n        case FOOTER:\r\n      return {\r\n        ...state,\r\n        footer: !state.footer,\r\n      };\r\n\r\n      ////\r\n      case SEARCH_SUCCESS:\r\n        return {\r\n            ...state,\r\n            products: action.payload,\r\n        };\r\n      \r\n      case SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        isSearch: true,\r\n      };\r\n      \r\n      case ADD_TO_CART:\r\n        const currentItem = state.shoppingCart.find((item) => item.id === action.payload.id); // buscar si existe el item primero en el carrito\r\n        if(currentItem) {\r\n          console.log(\"Updating quantity for item with ID:\", action.payload.id);\r\n          return { //si existe, agregarle 1 a la cantidad\r\n          ...state,\r\n          shoppingCart: state.shoppingCart.map((item) =>\r\n          item.id === action.payload.id\r\n          ? { ...item, quantity: item.quantity + 1} //si existe el item, actualizá la cantidad y agregale 1\r\n          : item\r\n          ),\r\n        };\r\n        } else {\r\n          console.log(\"Adding new item to the cart:\", action.payload);\r\n          return {\r\n            ...state,\r\n            shoppingCart: [...state.shoppingCart, {...action.payload, quantity: 1 }],\r\n          }; //si no existe, agregalo y agregá una quantity con 1\r\n        };\r\n      \r\n        case REMOVE_FROM_CART:\r\n          const currenItem = state.shoppingCart.find((item) => item.id === action.payload); //primero buscar el item\r\n          if (currenItem) { //si existe el item, evaluar si es mayor que 1 su cantidad\r\n            if (currenItem.quantity > 1) {\r\n              return {\r\n                ...state,\r\n                shoppingCart: state.shoppingCart.map((item) =>\r\n                  item.id === action.payload\r\n                    ? { ...item, quantity: item.quantity - 1 }\r\n                    : item\r\n                ), // si es mayor que 1, bajar la cantidad en uno\r\n              };\r\n            } else {\r\n              // Si es 1 la cantidad, borrarlo directamente\r\n              return {\r\n                ...state,\r\n                shoppingCart: state.shoppingCart.filter((item) => item.id !== action.payload),\r\n              };\r\n            }\r\n          }\r\n          return state; // retornar el estado actual si no se encuentran el item\r\n\r\n          case REMOVE_ALL:\r\n            const { productId, quantityToRemove } = action.payload;\r\n          return{\r\n          ...state,\r\n          shoppingCart: state.shoppingCart.filter((item) => item.id !== productId),\r\n          cartCount: state.cartCount - quantityToRemove,\r\n      };\r\n\r\n        case UPDATE_QUANTITY:\r\n        return {\r\n        ...state,\r\n        shoppingCart: state.items.map((item) =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        ),\r\n      };\r\n\r\n        case UPDATE_CART_COUNT:\r\n          const increment = action.payload; //si increment viene en true viene en el payload\r\n          return {\r\n            ...state,\r\n            cartCount: increment ? state.cartCount + 1 : state.cartCount - 1,\r\n          } // si increment está en true, sumale uno a la cuenta. Sino, restale 1.\r\n\r\n    default:\r\n        return state\r\n      }}\r\n      export default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}