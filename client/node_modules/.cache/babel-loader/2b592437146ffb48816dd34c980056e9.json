{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\Card.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import \"./Card.css\"\n\n// export default function Card({ id, images, name }) {\n\n//   const imageUrls = images.split(\", \"); // Separar las URLs de imagen en un array\n\n//   return (\n//     <div>\n//       <Link to={`/products/${id}`} className=\"card-link\">\n//         <h2 className=\"cardName\">{name}</h2>\n//         <div>\n//           {/* Itera cada URL de imagen y renderizar cada una */}\n//           {imageUrls.map((imageUrl, index) => (\n//             <img key={index} src={imageUrl} alt=\"no\" />\n//           ))}\n//         </div>\n//       </Link>\n//     </div>\n//   );\n// }\n\n//puede aplicarse la logica para el detalle para pasar \nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n  let {\n    id,\n    images,\n    name\n  } = _ref;\n  const imageUrls = images.split(\", \");\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const handleNextImage = () => {\n    setCurrentImageIndex(prevIndex => prevIndex === imageUrls.length - 1 ? 0 : prevIndex + 1);\n  };\n  const handlePrevImage = () => {\n    setCurrentImageIndex(prevIndex => prevIndex === 0 ? imageUrls.length - 1 : prevIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${id}`,\n      className: \"card-link\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cardName\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrls[currentImageIndex],\n          alt: \"no\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevImage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextImage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"9v0ytpuutRzzYv7ZHc4AVX3IX2Q=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Card","_ref","_s","id","images","name","imageUrls","split","currentImageIndex","setCurrentImageIndex","handleNextImage","prevIndex","length","handlePrevImage","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/Card.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./Card.css\"\r\n\r\n// export default function Card({ id, images, name }) {\r\n  \r\n//   const imageUrls = images.split(\", \"); // Separar las URLs de imagen en un array\r\n\r\n//   return (\r\n//     <div>\r\n//       <Link to={`/products/${id}`} className=\"card-link\">\r\n//         <h2 className=\"cardName\">{name}</h2>\r\n//         <div>\r\n//           {/* Itera cada URL de imagen y renderizar cada una */}\r\n//           {imageUrls.map((imageUrl, index) => (\r\n//             <img key={index} src={imageUrl} alt=\"no\" />\r\n//           ))}\r\n//         </div>\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//puede aplicarse la logica para el detalle para pasar \r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nexport default function Card({ id, images, name }) {\r\n  const imageUrls = images.split(\", \");\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  const handleNextImage = () => {\r\n    setCurrentImageIndex((prevIndex) =>\r\n      prevIndex === imageUrls.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const handlePrevImage = () => {\r\n    setCurrentImageIndex((prevIndex) =>\r\n      prevIndex === 0 ? imageUrls.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to={`/products/${id}`} className=\"card-link\">\r\n        <h2 className=\"cardName\">{name}</h2>\r\n        <div>\r\n          <img src={imageUrls[currentImageIndex]} alt=\"no\" />\r\n        </div>\r\n        <div>\r\n          <button onClick={handlePrevImage}>Previous</button>\r\n          <button onClick={handleNextImage}>Next</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,EAAE;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAAJ,IAAA;EAC/C,MAAMK,SAAS,GAAGF,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC;EACpC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE7D,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5BD,oBAAoB,CAAEE,SAAS,IAC7BA,SAAS,KAAKL,SAAS,CAACM,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CAAC,CACvD;EACH,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,oBAAoB,CAAEE,SAAS,IAC7BA,SAAS,KAAK,CAAC,GAAGL,SAAS,CAACM,MAAM,GAAG,CAAC,GAAGD,SAAS,GAAG,CAAC,CACvD;EACH,CAAC;EAED,oBACEZ,OAAA;IAAAe,QAAA,eACEf,OAAA,CAACF,IAAI;MAACkB,EAAE,EAAG,aAAYZ,EAAG,EAAE;MAACa,SAAS,EAAC,WAAW;MAAAF,QAAA,gBAChDf,OAAA;QAAIiB,SAAS,EAAC,UAAU;QAAAF,QAAA,EAAET;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpCrB,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAKsB,GAAG,EAAEf,SAAS,CAACE,iBAAiB,CAAE;UAACc,GAAG,EAAC;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,eACNrB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAQwB,OAAO,EAAEV,eAAgB;UAAAC,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACnDrB,OAAA;UAAQwB,OAAO,EAAEb,eAAgB;UAAAI,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAClB,EAAA,CA9BuBF,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}