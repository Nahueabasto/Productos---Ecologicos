{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\UserProfile\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createUser } from \"../../Redux/Actions\";\nimport { useDispatch } from \"react-redux\";\nimport Navbar from \"../Navbar\";\nimport Menu from \"../Menu\";\nimport Footer from \"../Footer\";\n\n// const UserProfile = () => {\n//   const dispatch = useDispatch();\n//   const { user, isAuthenticated, isLoading } = useAuth0();\n//   console.log(user)\n\n//   useEffect(() => {\n//     if (isAuthenticated && !isLoading) {\n//       const userDb = {\n//         email: user.email,\n//         fullname: user.name,\n//         profile: user.nickname,\n//         avatar: user.picture,\n//       };\n\n//       dispatch(createUser(userDb));\n//     }\n//   }, [dispatch, isAuthenticated, isLoading, user]);\n\n//   if (isLoading) {\n//     // You can add a loading spinner or placeholder while the authentication is in progress\n//     return <div>Loading...</div>;\n//   }\n\n//   // The rest of your component code\n\n//   return (\n//     isAuthenticated && (\n//       <div>\n//         <div>\n//           <Navbar />\n//         </div>\n//         <div>\n//           <Menu />\n//         </div>\n//         <img src={user.picture} alt={user.name} />\n//         <h2>{user.name}</h2>\n//         <p>{user.email}</p>\n//         <h2>{user.nickname}</h2>\n//         <div>\n\n//           <Footer />\n//         </div>\n//       </div>\n//     )\n//   );\n// };\n\n// export default UserProfile;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user,\n    isAuthenticated,\n    isLoading\n  } = useAuth0();\n  console.log(user);\n  const userInfo = useSelector(state => state.user); // Suponiendo que el estado de Redux contiene la información del usuario de la base de datos\n\n  useEffect(() => {\n    if (isAuthenticated && !isLoading) {\n      const userDbData = {\n        email: user.email,\n        fullname: user.name,\n        profile: user.nickname,\n        avatar: user.picture\n      };\n      dispatch(createUser(userDbData));\n    }\n  }, [dispatch, isAuthenticated, isLoading, user]);\n  if (isLoading) {\n    // You can add a loading spinner or placeholder while the authentication is in progress\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 14\n    }, this);\n  }\n\n  // Check if the userDb and user objects have the same email (or any other unique identifier)\n  const hasUserDbData = userDb.email === user.email;\n  return isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), hasUserDbData ?\n    /*#__PURE__*/\n    // Show data from the database (userDb) if available\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userDb.avatar,\n        alt: userDb.fullname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userDb.fullname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userDb.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Show data directly from Auth0 (user) if not available in the database\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.picture,\n        alt: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(user)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"JTlkpvHzComwcxxC7iywCAKODM4=\", true, function () {\n  return [useDispatch, useAuth0];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useAuth0","createUser","useDispatch","Navbar","Menu","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","dispatch","user","isAuthenticated","isLoading","console","log","userInfo","useSelector","state","userDbData","email","fullname","name","profile","nickname","avatar","picture","children","fileName","_jsxFileName","lineNumber","columnNumber","hasUserDbData","userDb","src","alt","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/UserProfile/UserProfile.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { createUser } from \"../../Redux/Actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Navbar from \"../Navbar\";\r\nimport Menu from \"../Menu\";\r\nimport Footer from \"../Footer\";\r\n\r\n// const UserProfile = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { user, isAuthenticated, isLoading } = useAuth0();\r\n//   console.log(user)\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated && !isLoading) {\r\n//       const userDb = {\r\n//         email: user.email,\r\n//         fullname: user.name,\r\n//         profile: user.nickname,\r\n//         avatar: user.picture,\r\n//       };\r\n\r\n//       dispatch(createUser(userDb));\r\n//     }\r\n//   }, [dispatch, isAuthenticated, isLoading, user]);\r\n\r\n//   if (isLoading) {\r\n//     // You can add a loading spinner or placeholder while the authentication is in progress\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   // The rest of your component code\r\n\r\n//   return (\r\n//     isAuthenticated && (\r\n//       <div>\r\n//         <div>\r\n//           <Navbar />\r\n//         </div>\r\n//         <div>\r\n//           <Menu />\r\n//         </div>\r\n//         <img src={user.picture} alt={user.name} />\r\n//         <h2>{user.name}</h2>\r\n//         <p>{user.email}</p>\r\n//         <h2>{user.nickname}</h2>\r\n//         <div>\r\n\r\n//           <Footer />\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default UserProfile;\r\n\r\nconst UserProfile = () => {\r\n    const dispatch = useDispatch();\r\n    const { user, isAuthenticated, isLoading } = useAuth0();\r\n    console.log(user);\r\n  \r\n    const userInfo = useSelector((state) => state.user); // Suponiendo que el estado de Redux contiene la información del usuario de la base de datos\r\n  \r\n    useEffect(() => {\r\n      if (isAuthenticated && !isLoading) {\r\n        const userDbData = {\r\n          email: user.email,\r\n          fullname: user.name,\r\n          profile: user.nickname,\r\n          avatar: user.picture,\r\n        };\r\n  \r\n        dispatch(createUser(userDbData));\r\n      }\r\n    }, [dispatch, isAuthenticated, isLoading, user]);\r\n  \r\n    if (isLoading) {\r\n      // You can add a loading spinner or placeholder while the authentication is in progress\r\n      return <div>Loading...</div>;\r\n    }\r\n  \r\n    // Check if the userDb and user objects have the same email (or any other unique identifier)\r\n    const hasUserDbData = userDb.email === user.email;\r\n  \r\n    return (\r\n      isAuthenticated && (\r\n        <div>\r\n          <div>\r\n            <Navbar />\r\n          </div>\r\n          <div>\r\n            <Menu />\r\n          </div>\r\n          {hasUserDbData ? (\r\n            // Show data from the database (userDb) if available\r\n            <>\r\n              <img src={userDb.avatar} alt={userDb.fullname} />\r\n              <h2>{userDb.fullname}</h2>\r\n              <p>{userDb.email}</p>\r\n            </>\r\n          ) : (\r\n            // Show data directly from Auth0 (user) if not available in the database\r\n            <>\r\n              <img src={user.picture} alt={user.name} />\r\n              <h2>{user.name}</h2>\r\n              <p>{user.email}</p>\r\n              <h2>{user.nickname}</h2>\r\n            </>\r\n          )}\r\n  \r\n          <pre>{JSON.stringify(user)}</pre>\r\n          <div>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  \r\n  export default UserProfile;\r\n  \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,MAAM,MAAM,WAAW;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM;IAAEW,IAAI;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGf,QAAQ,EAAE;EACvDgB,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,MAAMK,QAAQ,GAAGC,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACP,IAAI,CAAC,CAAC,CAAC;;EAErDd,SAAS,CAAC,MAAM;IACd,IAAIe,eAAe,IAAI,CAACC,SAAS,EAAE;MACjC,MAAMM,UAAU,GAAG;QACjBC,KAAK,EAAET,IAAI,CAACS,KAAK;QACjBC,QAAQ,EAAEV,IAAI,CAACW,IAAI;QACnBC,OAAO,EAAEZ,IAAI,CAACa,QAAQ;QACtBC,MAAM,EAAEd,IAAI,CAACe;MACf,CAAC;MAEDhB,QAAQ,CAACX,UAAU,CAACoB,UAAU,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAACT,QAAQ,EAAEE,eAAe,EAAEC,SAAS,EAAEF,IAAI,CAAC,CAAC;EAEhD,IAAIE,SAAS,EAAE;IACb;IACA,oBAAOR,OAAA;MAAAsB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC9B;;EAEA;EACA,MAAMC,aAAa,GAAGC,MAAM,CAACb,KAAK,KAAKT,IAAI,CAACS,KAAK;EAEjD,OACER,eAAe,iBACbP,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,eACEtB,OAAA,CAACJ,MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN,eACN1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA,CAACH,IAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,EACLC,aAAa;IAAA;IACZ;IACA3B,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QAAK6B,GAAG,EAAED,MAAM,CAACR,MAAO;QAACU,GAAG,EAAEF,MAAM,CAACZ;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjD1B,OAAA;QAAAsB,QAAA,EAAKM,MAAM,CAACZ;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1B1B,OAAA;QAAAsB,QAAA,EAAIM,MAAM,CAACb;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,gBACpB;IAAA;IAEH;IACA1B,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QAAK6B,GAAG,EAAEvB,IAAI,CAACe,OAAQ;QAACS,GAAG,EAAExB,IAAI,CAACW;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1C1B,OAAA;QAAAsB,QAAA,EAAKhB,IAAI,CAACW;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpB1B,OAAA;QAAAsB,QAAA,EAAIhB,IAAI,CAACS;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnB1B,OAAA;QAAAsB,QAAA,EAAKhB,IAAI,CAACa;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA,gBAE3B,eAED1B,OAAA;MAAAsB,QAAA,EAAMS,IAAI,CAACC,SAAS,CAAC1B,IAAI;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACjC1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA,CAACF,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAET;AAEL,CAAC;AAACtB,EAAA,CA7DED,WAAW;EAAA,QACIR,WAAW,EACiBF,QAAQ;AAAA;AAAAwC,EAAA,GAFnD9B,WAAW;AA+Df,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}