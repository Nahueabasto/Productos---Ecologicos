{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\UserProfile\\\\UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createUser, getUserInfo } from \"../../Redux/Actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Navbar from \"../Navbar\";\nimport Menu from \"../Menu\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user,\n    isAuthenticated,\n    isLoading\n  } = useAuth0();\n  const userInfo = useSelector(state => state.userInfo);\n  useEffect(() => {\n    if (isAuthenticated && !isLoading) {\n      const userDbData = {\n        email: user.email,\n        fullname: user.name,\n        profile: user.nickname,\n        avatar: user.picture\n      };\n      dispatch(createUser(userDbData));\n      dispatch(getUserInfo());\n    }\n  }, [dispatch, isAuthenticated, isLoading, user]);\n  if (isLoading) {\n    // You can add a loading spinner or placeholder while the authentication is in progress\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if the userDb and user objects have the same email (or any other unique identifier)\n  //   userInfo.map((e) => {\n  //     console.log(e.email);\n  //   });\n\n  // var hasUserDbData;\n  // for (let i = 0; i < userInfo.length; i++) {\n  //     if (userInfo[i].email === user.email) {\n  //         //console.log(userInfo[i].email)\n  //         hasUserDbData = user.email\n  //         //console.log(hasUserDbData)\n  //     }\n  // }\n  // //console.log(hasUserDbData)\n\n  return isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), hasUserDbData &&\n    /*#__PURE__*/\n    // Show data from the database (userDb) if available\n    _jsxDEV(_Fragment, {\n      children: userInfo.map(el => {\n        // Check if the email of userInfo matches the email of user\n        if (el.email === user.email) {\n          console.log(user.email);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: el.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: el.profile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: el.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this);\n        }\n      })\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n};\n_s(UserProfile, \"JTlkpvHzComwcxxC7iywCAKODM4=\", false, function () {\n  return [useDispatch, useAuth0, useSelector];\n});\n_c = UserProfile;\nexport default UserProfile;\n\n// const UserProfile = () => {\n//   const dispatch = useDispatch();\n//   const { user, isAuthenticated, isLoading } = useAuth0();\n//   console.log(user)\n\n//   useEffect(() => {\n//     if (isAuthenticated && !isLoading) {\n//       const userDb = {\n//         email: user.email,\n//         fullname: user.name,\n//         profile: user.nickname,\n//         avatar: user.picture,\n//       };\n\n//       dispatch(createUser(userDb));\n//     }\n//   }, [dispatch, isAuthenticated, isLoading, user]);\n\n//   if (isLoading) {\n//     // You can add a loading spinner or placeholder while the authentication is in progress\n//     return <div>Loading...</div>;\n//   }\n\n//   // The rest of your component code\n\n//   return (\n//     isAuthenticated && (\n//       <div>\n//         <div>\n//           <Navbar />\n//         </div>\n//         <div>\n//           <Menu />\n//         </div>\n//         <img src={user.picture} alt={user.name} />\n//         <h2>{user.name}</h2>\n//         <p>{user.email}</p>\n//         <h2>{user.nickname}</h2>\n//         <div>\n\n//           <Footer />\n//         </div>\n//       </div>\n//     )\n//   );\n// };\n\n// export default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useAuth0","createUser","getUserInfo","useDispatch","useSelector","Navbar","Menu","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","dispatch","user","isAuthenticated","isLoading","userInfo","state","userDbData","email","fullname","name","profile","nickname","avatar","picture","children","fileName","_jsxFileName","lineNumber","columnNumber","hasUserDbData","map","el","console","log","src","id","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/UserProfile/UserProfile.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { createUser, getUserInfo } from \"../../Redux/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Navbar from \"../Navbar\";\r\nimport Menu from \"../Menu\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst UserProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && !isLoading) {\r\n      const userDbData = {\r\n        email: user.email,\r\n        fullname: user.name,\r\n        profile: user.nickname,\r\n        avatar: user.picture,\r\n      };\r\n\r\n      dispatch(createUser(userDbData));\r\n      dispatch(getUserInfo());\r\n    }\r\n  }, [dispatch, isAuthenticated, isLoading, user]);\r\n\r\n  if (isLoading) {\r\n    // You can add a loading spinner or placeholder while the authentication is in progress\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Check if the userDb and user objects have the same email (or any other unique identifier)\r\n//   userInfo.map((e) => {\r\n//     console.log(e.email);\r\n//   });\r\n\r\n// var hasUserDbData;\r\n// for (let i = 0; i < userInfo.length; i++) {\r\n//     if (userInfo[i].email === user.email) {\r\n//         //console.log(userInfo[i].email)\r\n//         hasUserDbData = user.email\r\n//         //console.log(hasUserDbData)\r\n//     }\r\n// }\r\n// //console.log(hasUserDbData)\r\n  \r\n  \r\n \r\nreturn (\r\n    isAuthenticated && (\r\n      <div>\r\n        <div>\r\n          <Navbar />\r\n        </div>\r\n        <div>\r\n          <Menu />\r\n        </div>\r\n        {hasUserDbData && (\r\n          // Show data from the database (userDb) if available\r\n          <>\r\n            {userInfo.map((el) => {\r\n              // Check if the email of userInfo matches the email of user\r\n              if (el.email === user.email) {\r\n                console.log(user.email)\r\n                return (\r\n                  <div key={el.id}>\r\n                    <img src={el.avatar}  />\r\n                    <h2>{el.profile}</h2>\r\n                    <p>{el.email}</p>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        )}\r\n        <div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n        }  \r\nexport default UserProfile;\r\n\r\n\r\n// const UserProfile = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { user, isAuthenticated, isLoading } = useAuth0();\r\n//   console.log(user)\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated && !isLoading) {\r\n//       const userDb = {\r\n//         email: user.email,\r\n//         fullname: user.name,\r\n//         profile: user.nickname,\r\n//         avatar: user.picture,\r\n//       };\r\n\r\n//       dispatch(createUser(userDb));\r\n//     }\r\n//   }, [dispatch, isAuthenticated, isLoading, user]);\r\n\r\n//   if (isLoading) {\r\n//     // You can add a loading spinner or placeholder while the authentication is in progress\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   // The rest of your component code\r\n\r\n//   return (\r\n//     isAuthenticated && (\r\n//       <div>\r\n//         <div>\r\n//           <Navbar />\r\n//         </div>\r\n//         <div>\r\n//           <Menu />\r\n//         </div>\r\n//         <img src={user.picture} alt={user.name} />\r\n//         <h2>{user.name}</h2>\r\n//         <p>{user.email}</p>\r\n//         <h2>{user.nickname}</h2>\r\n//         <div>\r\n\r\n//           <Footer />\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default UserProfile;\r\n\r\n\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}