{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\Login\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createUser, getUserInfo } from \"../../Redux/Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupButton() {\n  _s();\n  const {\n    loginWithRedirect,\n    user\n  } = useAuth0();\n\n  //console.log(user)\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => loginWithRedirect(),\n    className: \"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\",\n    children: \"Sign up \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n_s(SignupButton, \"ueNOoY2JfMdQePtvj7x2Yu9cljY=\", false, function () {\n  return [useAuth0];\n});\n_c = SignupButton;\n;\n\n// export default function SignupButton() {\n//     const { loginWithRedirect, user, isAuthenticated } = useAuth0();\n\n//     const createUserInDatabase = (user) => {\n//       // Aquí va la lógica para crear el usuario en la base de datos\n//       // Puedes implementar la función createUser o realizar una solicitud a tu API\n//       // para guardar los datos del usuario en tu base de datos\n//       const userDb = {\n//         email: user.email,\n//         name: user.name,\n//         // Otros datos del usuario que deseas guardar en la base de datos\n//       };\n\n//       // Ejemplo usando una función createUser que deberías definir en tu código\n//       createUser(userDb)\n//         .then(() => {\n//           console.log(\"Usuario creado exitosamente en la base de datos\");\n//         })\n//         .catch((error) => {\n//           console.error(\"Error al crear el usuario en la base de datos:\", error);\n//         });\n//     };\n\n//     // Lógica para crear el usuario en la base de datos cuando el usuario se registra\n//     if (isAuthenticated && user) {\n//       // Verifica si el usuario se ha registrado por primera vez para evitar llamadas duplicadas\n//       if (user.sub.includes(\"auth0|\")) {\n//         createUserInDatabase(user);\n//       }\n//     }\n\n//     return (\n//       <button onClick={() => loginWithRedirect()} className=\"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\">Sign up</button>\n//     );\n//   };\nvar _c;\n$RefreshReg$(_c, \"SignupButton\");","map":{"version":3,"names":["React","useAuth0","createUser","getUserInfo","jsxDEV","_jsxDEV","SignupButton","_s","loginWithRedirect","user","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/Login/Signup.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { createUser, getUserInfo } from \"../../Redux/Actions\";\r\n\r\nexport default function SignupButton () {\r\n    const { loginWithRedirect, user} = useAuth0();\r\n\r\n//console.log(user)\r\n    return(\r\n            <button onClick={()=>loginWithRedirect()} className=\"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\">Sign up </button>\r\n    )\r\n};\r\n\r\n// export default function SignupButton() {\r\n//     const { loginWithRedirect, user, isAuthenticated } = useAuth0();\r\n  \r\n//     const createUserInDatabase = (user) => {\r\n//       // Aquí va la lógica para crear el usuario en la base de datos\r\n//       // Puedes implementar la función createUser o realizar una solicitud a tu API\r\n//       // para guardar los datos del usuario en tu base de datos\r\n//       const userDb = {\r\n//         email: user.email,\r\n//         name: user.name,\r\n//         // Otros datos del usuario que deseas guardar en la base de datos\r\n//       };\r\n  \r\n//       // Ejemplo usando una función createUser que deberías definir en tu código\r\n//       createUser(userDb)\r\n//         .then(() => {\r\n//           console.log(\"Usuario creado exitosamente en la base de datos\");\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error al crear el usuario en la base de datos:\", error);\r\n//         });\r\n//     };\r\n  \r\n//     // Lógica para crear el usuario en la base de datos cuando el usuario se registra\r\n//     if (isAuthenticated && user) {\r\n//       // Verifica si el usuario se ha registrado por primera vez para evitar llamadas duplicadas\r\n//       if (user.sub.includes(\"auth0|\")) {\r\n//         createUserInDatabase(user);\r\n//       }\r\n//     }\r\n  \r\n//     return (\r\n//       <button onClick={() => loginWithRedirect()} className=\"btn btn-outline-dark btn-sm ms-4 ps-3 pe-3\">Sign up</button>\r\n//     );\r\n//   };"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,EAAEC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,YAAYA,CAAA,EAAI;EAAAC,EAAA;EACpC,MAAM;IAAEC,iBAAiB;IAAEC;EAAI,CAAC,GAAGR,QAAQ,EAAE;;EAEjD;EACI,oBACQI,OAAA;IAAQK,OAAO,EAAEA,CAAA,KAAIF,iBAAiB,EAAG;IAACG,SAAS,EAAC,4CAA4C;IAAAC,QAAA,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAE9H;AAACT,EAAA,CAPuBD,YAAY;EAAA,QACGL,QAAQ;AAAA;AAAAgB,EAAA,GADvBX,YAAY;AAOnC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}