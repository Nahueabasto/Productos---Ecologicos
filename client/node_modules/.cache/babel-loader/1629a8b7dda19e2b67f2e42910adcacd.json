{"ast":null,"code":"import axios from \"axios\";\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const GET_PRODUCT_DETAIL = 'GET_PRODUCT_DETAIL';\nexport const GET_NAME_PRODUCTS = 'GET_NAME_PRODUCTS';\nexport const GET_LINE_PRODUCTS = 'GET_LINE_PRODUCTS';\nexport const SET_LINE = \"SET_LINE\";\nexport const FOOTER = \"FOOTER\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SET_SEARCH = \"SET_SEARCH\";\nexport const setSearch = \"setSearch\";\nexport const setLine = \"setLine\";\nexport const CREATE_USER = 'CREATE_USER';\n//import { loadingAction } from \".\";\n\nexport function getProducts() {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/products\", {});\n    return dispatch({\n      type: GET_PRODUCTS,\n      payload: json.data\n    });\n  };\n}\nexport function getDetail(id) {\n  return async function (dispatch) {\n    try {\n      let productDetail = await axios.get(`http://localhost:3001/${id}`);\n      console.log(productDetail.data);\n      return dispatch({\n        type: 'GET_PRODUCT_DETAIL',\n        payload: productDetail.data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n}\nexport function getLineProducts(liness) {\n  return async function (dispatch) {\n    try {\n      const filteredProducts = liness.filter(liness => liness.lines.some(lineObj => lineObj.name.toLowerCase().replace(/\\s/g, '-') === lineParam.toLowerCase()));\n      //const lowercaseLine = line.toLowerCase().replace(/\\s/g, '-'); // Formatear la línea para que coincida con el formato esperado por el servidor\n      const response = await axios.get(`http://localhost:3001/lines`, {\n        params: {\n          lineParam: lowercaseLine\n        } // Enviar el parámetro \"lineParam\" como query parameter\n      });\n\n      dispatch({\n        type: GET_LINE_PRODUCTS,\n        payload: response.data\n      });\n      dispatch({\n        type: SET_LINE,\n        payload: line // Opcional: establecer el valor de la línea seleccionada en el estado si es necesario\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\n////\nexport function getNameProduct(name) {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/products?name=${name}`);\n      dispatch({\n        type: SEARCH_SUCCESS,\n        payload: response.data\n      });\n      dispatch({\n        type: SET_SEARCH\n      });\n      // } catch (error) {\n      //   dispatch({\n      //     type: SEARCH_FAILURE,\n      //     payload: error.message,\n      //   });\n      // }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\n//// USER /////\nexport function createUser(payload) {\n  return async function (dispatch) {\n    try {\n      let response = await axios.post(\"/users\", payload);\n      dispatch({\n        type: CREATE_USER,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(\"ERROR\", error);\n    }\n  };\n}","map":{"version":3,"names":["axios","GET_PRODUCTS","GET_PRODUCT_DETAIL","GET_NAME_PRODUCTS","GET_LINE_PRODUCTS","SET_LINE","FOOTER","SEARCH_SUCCESS","SET_SEARCH","setSearch","setLine","CREATE_USER","getProducts","dispatch","json","get","type","payload","data","getDetail","id","productDetail","console","log","e","getLineProducts","liness","filteredProducts","filter","lines","some","lineObj","name","toLowerCase","replace","lineParam","response","params","lowercaseLine","line","error","getNameProduct","createUser","post"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/Redux/Actions.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const GET_PRODUCT_DETAIL = 'GET_PRODUCT_DETAIL';\r\nexport const GET_NAME_PRODUCTS = 'GET_NAME_PRODUCTS';\r\nexport const GET_LINE_PRODUCTS = 'GET_LINE_PRODUCTS';\r\nexport const SET_LINE = \"SET_LINE\";\r\nexport const FOOTER = \"FOOTER\";\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\r\nexport const SET_SEARCH = \"SET_SEARCH\";\r\nexport const setSearch = \"setSearch\";\r\nexport const setLine = \"setLine\";\r\nexport const CREATE_USER = 'CREATE_USER'\r\n//import { loadingAction } from \".\";\r\n\r\nexport function getProducts(){\r\n    return async function(dispatch){\r\n        var json = await axios.get(\"http://localhost:3001/products\",{\r\n        })\r\n        return dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: json.data\r\n        })\r\n    }\r\n}\r\n\r\nexport function getDetail(id){\r\n    return async function(dispatch){\r\n      try {\r\n\r\n          let productDetail = await axios.get(`http://localhost:3001/${id}`)\r\n          console.log(productDetail.data);\r\n          \r\n          return dispatch({\r\n              type: 'GET_PRODUCT_DETAIL',\r\n              payload: productDetail.data\r\n          });\r\n      } catch(e){\r\n          console.log(e)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  export function getLineProducts(liness) {\r\n    return async function(dispatch) {\r\n      try {\r\n        const filteredProducts = liness.filter((liness) =>\r\n        liness.lines.some((lineObj) => lineObj.name.toLowerCase().replace(/\\s/g, '-') === lineParam.toLowerCase())\r\n      );\r\n        //const lowercaseLine = line.toLowerCase().replace(/\\s/g, '-'); // Formatear la línea para que coincida con el formato esperado por el servidor\r\n        const response = await axios.get(`http://localhost:3001/lines`, {\r\n          params: { lineParam: lowercaseLine } // Enviar el parámetro \"lineParam\" como query parameter\r\n        });\r\n  \r\n        dispatch({\r\n          type: GET_LINE_PRODUCTS,\r\n          payload: response.data\r\n        });\r\n  \r\n        dispatch({\r\n          type: SET_LINE,\r\n          payload: line // Opcional: establecer el valor de la línea seleccionada en el estado si es necesario\r\n        });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n    ////\r\n    export function getNameProduct(name) {\r\n        return async function (dispatch) {\r\n          try {\r\n            const response = await axios.get(`http://localhost:3001/products?name=${name}`);\r\n            dispatch({\r\n              type: SEARCH_SUCCESS,\r\n              payload: response.data,\r\n            });\r\n            dispatch({\r\n              type: SET_SEARCH,\r\n            });\r\n          // } catch (error) {\r\n          //   dispatch({\r\n          //     type: SEARCH_FAILURE,\r\n          //     payload: error.message,\r\n          //   });\r\n          // }\r\n        } catch (error) {\r\n          console.error(error);\r\n      }\r\n        };\r\n      }\r\n      \r\n      //// USER /////\r\n      export function createUser(payload) {\r\n        return async function (dispatch) {\r\n          try {\r\n            \r\n            let response = await axios.post(\"/users\", payload);\r\n            dispatch({\r\n              type: CREATE_USER,\r\n              payload: response.data,\r\n            });\r\n      \r\n          } catch (error) {\r\n            console.log(\"ERROR\", error);\r\n          }\r\n        };\r\n      }\r\n      "],"mappings":"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"},"metadata":{},"sourceType":"module"}