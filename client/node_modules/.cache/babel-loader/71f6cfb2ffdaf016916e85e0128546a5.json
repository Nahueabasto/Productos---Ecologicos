{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { createUser, getUserInfo } from \"../../Redux/Actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Navbar from \"../Navbar\";\nimport Menu from \"../Menu\";\nimport Footer from \"../Footer\";\n\n// const UserProfile = () => {\n//   const dispatch = useDispatch();\n//   const { user, isAuthenticated, isLoading } = useAuth0();\n//   const userInfo = useSelector((state) => state.userInfo);\n// //   const userInfoObj = userInfo.reduce((acc, el) => {\n// //     acc[el.email] = el;\n// //     return acc;\n// //   }, {});\n\n//   useEffect(() => {\n//     if (isAuthenticated && !isLoading) {\n//       const userDbData = {\n//         email: user.email,\n//         fullname: user.name,\n//         profile: user.nickname,\n//         avatar: user.picture,\n//       };\n\n//       dispatch(createUser(userDbData));\n//       dispatch(getUserInfo());\n//     }\n//   }, [dispatch, isAuthenticated, isLoading, user]);\n\n//   if (isLoading) {\n//     // You can add a loading spinner or placeholder while the authentication is in progress\n//     return <div>Loading...</div>;\n//   }\n\n//   // Check if the userDb and user objects have the same email (or any other unique identifier)\n// //   userInfo.map((e) => {\n// //     console.log(e.email);\n// //   });\n\n// // var hasUserDbData;\n// // for (let i = 0; i < userInfo.length; i++) {\n// //   if (userInfo[i].email === user.email) {\n// //     hasUserDbData = user.email;\n// //     // Realizar acciones adicionales si lo deseas\n// //     // ...\n// //     break; // Salir del bucle una vez que se encuentra la coincidencia\n// //   }\n// // }\n\n// //console.log(hasUserDbData)\n\n// return (\n//     <div>\n//         <h1>{userInfo.name}</h1>\n//     </div>\n// )\n// }\n// export default UserProfile;\n\n// const UserProfile = () => {\n//   const dispatch = useDispatch();\n//   const { user, isAuthenticated, isLoading } = useAuth0();\n//   const userInfo = useSelector((state) => state.userInfo);\n//   console.log(userInfo)\n\n//   useEffect(() => {\n//     if (isAuthenticated && !isLoading) {\n//       const userDb = {\n//         email: user.email,\n//         fullname: user.name,\n//         profile: user.nickname,\n//         avatar: user.picture,\n//       };\n\n//       dispatch(createUser(userDb));\n//       dispatch(getUserInfo());\n//     }\n//   }, [dispatch, isAuthenticated, isLoading, user]);\n\n//   if (isLoading) {\n//     // You can add a loading spinner or placeholder while the authentication is in progress\n//     return <div>Loading...</div>;\n//   }\n\n//   // The rest of your component code\n\n//   return (\n//     isAuthenticated && (\n//       <div>\n//         <div>\n//           <Navbar />\n//         </div>\n//         <div>\n//           <Menu />\n//         </div>\n//         <img src={user.picture} alt={user.name} />\n//         <h2>{user.name}</h2>\n//         <p>{user.email}</p>\n//         <h2>{user.nickname}</h2>\n//         <div>\n\n//           <Footer />\n//         </div>\n//       </div>\n//     )\n//   );\n// };\n\n// export default UserProfile;","map":{"version":3,"names":["React","useEffect","useAuth0","createUser","getUserInfo","useDispatch","useSelector","Navbar","Menu","Footer"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/UserProfile/UserProfile.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { createUser, getUserInfo } from \"../../Redux/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Navbar from \"../Navbar\";\r\nimport Menu from \"../Menu\";\r\nimport Footer from \"../Footer\";\r\n\r\n// const UserProfile = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { user, isAuthenticated, isLoading } = useAuth0();\r\n//   const userInfo = useSelector((state) => state.userInfo);\r\n// //   const userInfoObj = userInfo.reduce((acc, el) => {\r\n// //     acc[el.email] = el;\r\n// //     return acc;\r\n// //   }, {});\r\n\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated && !isLoading) {\r\n//       const userDbData = {\r\n//         email: user.email,\r\n//         fullname: user.name,\r\n//         profile: user.nickname,\r\n//         avatar: user.picture,\r\n//       };\r\n\r\n//       dispatch(createUser(userDbData));\r\n//       dispatch(getUserInfo());\r\n//     }\r\n//   }, [dispatch, isAuthenticated, isLoading, user]);\r\n\r\n//   if (isLoading) {\r\n//     // You can add a loading spinner or placeholder while the authentication is in progress\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   // Check if the userDb and user objects have the same email (or any other unique identifier)\r\n// //   userInfo.map((e) => {\r\n// //     console.log(e.email);\r\n// //   });\r\n\r\n// // var hasUserDbData;\r\n// // for (let i = 0; i < userInfo.length; i++) {\r\n// //   if (userInfo[i].email === user.email) {\r\n// //     hasUserDbData = user.email;\r\n// //     // Realizar acciones adicionales si lo deseas\r\n// //     // ...\r\n// //     break; // Salir del bucle una vez que se encuentra la coincidencia\r\n// //   }\r\n// // }\r\n\r\n// //console.log(hasUserDbData)\r\n  \r\n// return (\r\n//     <div>\r\n//         <h1>{userInfo.name}</h1>\r\n//     </div>\r\n// )\r\n// }\r\n// export default UserProfile;\r\n\r\n\r\n\r\n\r\n// const UserProfile = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { user, isAuthenticated, isLoading } = useAuth0();\r\n//   const userInfo = useSelector((state) => state.userInfo);\r\n//   console.log(userInfo)\r\n\r\n//   useEffect(() => {\r\n//     if (isAuthenticated && !isLoading) {\r\n//       const userDb = {\r\n//         email: user.email,\r\n//         fullname: user.name,\r\n//         profile: user.nickname,\r\n//         avatar: user.picture,\r\n//       };\r\n\r\n//       dispatch(createUser(userDb));\r\n//       dispatch(getUserInfo());\r\n//     }\r\n//   }, [dispatch, isAuthenticated, isLoading, user]);\r\n\r\n//   if (isLoading) {\r\n//     // You can add a loading spinner or placeholder while the authentication is in progress\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   // The rest of your component code\r\n\r\n//   return (\r\n//     isAuthenticated && (\r\n//       <div>\r\n//         <div>\r\n//           <Navbar />\r\n//         </div>\r\n//         <div>\r\n//           <Menu />\r\n//         </div>\r\n//         <img src={user.picture} alt={user.name} />\r\n//         <h2>{user.name}</h2>\r\n//         <p>{user.email}</p>\r\n//         <h2>{user.nickname}</h2>\r\n//         <div>\r\n\r\n//           <Footer />\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   );\r\n// };\r\n\r\n// export default UserProfile;\r\n\r\n\r\n  \r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,EAAEC,WAAW,QAAQ,qBAAqB;AAC7D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,MAAM,MAAM,WAAW;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}