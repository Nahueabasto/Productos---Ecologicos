{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Productos---Ecologicos\\\\client\\\\src\\\\components\\\\Card.jsx\";\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// export default function Card({ id, images, name }) {\n\n//   const imageUrls = images.split(\", \"); // Separar las URLs de imagen en un array\n\n//   return (\n//     <div>\n//       <Link to={`/products/${id}`} className=\"card-link\">\n//         <h2 className=\"cardName\">{name}</h2>\n//         <div>\n//           {/* Itera cada URL de imagen y renderizar cada una */}\n//           {imageUrls.map((imageUrl, index) => (\n//             <img key={index} src={imageUrl} alt=\"no\" />\n//           ))}\n//         </div>\n//       </Link>\n//     </div>\n//   );\n// }\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Card.css\"; // Importar archivo CSS para estilos personalizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  let {\n    id,\n    images,\n    name\n  } = _ref;\n  const imageUrls = images.split(\", \");\n  const firstImageUrl = imageUrls[0]; // Obtener la primera URL de imagen\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${el.id}`,\n      className: \"card-link\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: firstImageUrl,\n          alt: \"no\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"cardName\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Card","_ref","id","images","name","imageUrls","split","firstImageUrl","children","to","el","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Productos---Ecologicos/client/src/components/Card.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export default function Card({ id, images, name }) {\r\n  \r\n//   const imageUrls = images.split(\", \"); // Separar las URLs de imagen en un array\r\n\r\n//   return (\r\n//     <div>\r\n//       <Link to={`/products/${id}`} className=\"card-link\">\r\n//         <h2 className=\"cardName\">{name}</h2>\r\n//         <div>\r\n//           {/* Itera cada URL de imagen y renderizar cada una */}\r\n//           {imageUrls.map((imageUrl, index) => (\r\n//             <img key={index} src={imageUrl} alt=\"no\" />\r\n//           ))}\r\n//         </div>\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.css\"; // Importar archivo CSS para estilos personalizados\r\n\r\nexport default function Card({ id, images, name }) {\r\n  const imageUrls = images.split(\", \");\r\n  const firstImageUrl = imageUrls[0]; // Obtener la primera URL de imagen\r\n\r\n  return (\r\n    <div>\r\n      <Link to={`/products/${el.id}`} className=\"card-link\">\r\n        <div className=\"card-content\">\r\n          {/* Mostrar solo la primera URL de imagen */}\r\n          <img src={firstImageUrl} alt=\"no\" />\r\n          <h2 className=\"cardName\">{name}</h2>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );  \r\n}\r\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAAuB;EAAA,IAAtB;IAAEC,EAAE;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAC/C,MAAMI,SAAS,GAAGF,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC;EACpC,MAAMC,aAAa,GAAGF,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpC,oBACEN,OAAA;IAAAS,QAAA,eACET,OAAA,CAACF,IAAI;MAACY,EAAE,EAAG,aAAYC,EAAE,CAACR,EAAG,EAAE;MAACS,SAAS,EAAC,WAAW;MAAAH,QAAA,eACnDT,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAH,QAAA,gBAE3BT,OAAA;UAAKa,GAAG,EAAEL,aAAc;UAACM,GAAG,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACpClB,OAAA;UAAIY,SAAS,EAAC,UAAU;UAAAH,QAAA,EAAEJ;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACC,EAAA,GAfuBlB,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}